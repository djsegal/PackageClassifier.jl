World Bank Data in Julia The World Bank provides free access to data about development at data.worldbank.org . The primary collection of development indicators is called World Development Indicators (WDI). This module provides two functions to access and download the data: search_wdi() and wdi() . It follows roughly the R WDI package . Build Status Installation using Pkg Pkg . add ( " WorldBankData " ) Basic Examples Obtain a DataFrame with the gross national income per capita for the US and Brazil: using WorldBankData df = wdi ( " NY.GNP.PCAP.CD " , [ " US " , " BR " ]) 120 × 4 DataFrames . DataFrame │ Row │ iso2c │ country │ NY_GNP_PCAP_CD │ year │ │ │ String │ String │ Float64⍰ │ Float64 │ ├─────┼────────┼───────────────┼────────────────┼─────────┤ │ 1 │ BR │ Brazil │ missing │ 1960.0 │ │ 2 │ BR │ Brazil │ missing │ 1961.0 │ │ 3 │ BR │ Brazil │ missing │ 1962.0 │ ⋮ │ 118 │ US │ United States │ 59030.0 │ 2017.0 │ │ 119 │ US │ United States │ 63080.0 │ 2018.0 │ │ 120 │ US │ United States │ missing │ 2019.0 │ The WDI indicator NY.GNP.PCAP.CD becomes the symbol NY_GNP_PCAP_CD in the DataFrame, i.e. . gets replaced by _ . Multiple countries and indicators using WorldBankData df = wdi ([ " NY.GNP.PCAP.CD " , " AG.LND.ARBL.HA.PC " ], [ " US " , " BR " ], 1980 , 2008 , extra = true ) 58 × 13 DataFrames . DataFrame │ Row │ iso2c │ country │ NY_GNP_PCAP_CD │ year │ AG_LND_ARBL_HA_PC │ iso3c │ name │ region │ capital │ longitude │ latitude │ income │ lending │ │ │ String⍰ │ String⍰ │ Float64⍰ │ Float64⍰ │ Float64⍰ │ String │ String │ String │ String │ Float64⍰ │ Float64⍰ │ String │ String │ ├─────┼─────────┼───────────────┼────────────────┼──────────┼───────────────────┼────────┼───────────────┼────────────────────────────┼─────────────────┼───────────┼──────────┼─────────────────────┼────────────────┤ │ 1 │ BR │ Brazil │ 2200.0 │ 1980.0 │ 0.372844 │ BRA │ Brazil │ Latin America & Caribbean │ Brasilia │ - 47.9292 │ - 15.7801 │ Upper middle income │ IBRD │ │ 2 │ BR │ Brazil │ 2090.0 │ 1981.0 │ 0.369021 │ BRA │ Brazil │ Latin America & Caribbean │ Brasilia │ - 47.9292 │ - 15.7801 │ Upper middle income │ IBRD │ │ 3 │ BR │ Brazil │ 2010.0 │ 1982.0 │ 0.371546 │ BRA │ Brazil │ Latin America & Caribbean │ Brasilia │ - 47.9292 │ - 15.7801 │ Upper middle income │ IBRD │ ⋮ │ 57 │ US │ United States │ 48500.0 │ 2007.0 │ 0.537395 │ USA │ United States │ North America │ Washington D . C. │ - 77.032 │ 38.8895 │ High income │ Not classified │ │ 58 │ US │ United States │ 48980.0 │ 2008.0 │ 0.532114 │ USA │ United States │ North America │ Washington D . C. │ - 77.032 │ 38.8895 │ High income │ Not classified │ This returns the GNI per capita and the arable land (hectares per person) for the time range 1980-2008 for the US and Brazil. It also attaches extra country information (the extra=true argument) like the capital, longitude, latitude, income range, etc. Arguments The wdi function has the following arguments: wdi (indicators :: Union{String,Array{String,1}} , countries :: Union{String,Array{String,1}} , startyear :: Integer = 1800 , endyear :: Integer = 3000 ; extra :: Bool = false , verbose :: Bool = false ) It needs a minimum of two arguments: the indicators (from the WDI database) and the countries (ISO two letter country codes). The rest are optional arguments. startyear : First year to include. endyear : Last year to include. extra : If extra=true , wdi() attaches extra country data (like the capital) to the returned DataFrame. verbose : If verbose=true , wdi() will print URL download information. This can be used as a progress indicator if many countries and indicators are requested. Searching The most convenient way to explore the database is probably through a web browser at data.worldbank.org . However, the module does provide a search function: search_wdi() . One can search for "countries" or "indicators" data. Example for country search by name julia > using WorldBankData julia > res = search_wdi ( " countries " , " name " , r" united " i ) julia > res[ ! , :name ] 3 - element DataArray{UTF8String, 1 } : " United Arab Emirates " " United Kingdom " " United States " julia > res[ ! , :iso2c ] 3 - element DataArray{ASCIIString, 1 } : " AE " " GB " " US " Example for indicator search by description julia > using WorldBankData julia > res = search_wdi ( " indicators " , " description " , r" gross national expenditure " i ) 6 x5 DataFrame ... julia > res[ ! , :name ] 6 - element DataArray{UTF8String, 1 } : " Gross national expenditure deflator (base year varies by country) " " Gross national expenditure (current US \$ ) " " Gross national expenditure (current LCU) " " Gross national expenditure (constant 2005 US \$ ) " " Gross national expenditure (constant LCU) " " Gross national expenditure (% of GDP) " julia > res[ ! , :indicator ] 6 - element DataArray{UTF8String, 1 } : " NE.DAB.DEFL.ZS " " NE.DAB.TOTL.CD " " NE.DAB.TOTL.CN " " NE.DAB.TOTL.KD " " NE.DAB.TOTL.KN " " NE.DAB.TOTL.ZS " The search_wdi() function The search_wdi() function has the following arguments search_wdi (data :: String , entry :: String , regx :: Regex ) :: DataFrame data : Either countries or indicators . entry : One of the attributes (like name). regex : Regular expression to search for. "countries" can be searched for "name", "region", "capital", "iso2c", "iso3c", "income", and "lending". "indicators" can be searched for "name", "description", "topics", "source_database", and "source_organization". The search function uses two DataFrames country_cache and indicator_cache and searches through these. On the first search it will download the data from the World Bank website. This takes much longer for the larger indicators data. This only happens once per session. After the first use the data is cached. Note that the last argument to search_wdi() is a regular expression denoted by r"..." and an i at the end means that it is case insensitive. Examples of country searches search_wdi ( " countries " , " iso2c " , r" TZ " i ) 1 × 9 DataFrames . DataFrame │ Row │ iso3c │ iso2c │ name │ region │ capital │ longitude │ latitude │ income │ lending │ │ │ String │ String │ String │ String │ String │ Float64⍰ │ Float64⍰ │ String │ String │ ├─────┼────────┼────────┼──────────┼─────────────────────┼─────────┼───────────┼──────────┼────────────┼─────────┤ │ 1 │ TZA │ TZ │ Tanzania │ Sub - Saharan Africa │ Dodoma │ 35.7382 │ - 6.17486 │ Low income │ IDA │ julia > search_wdi ( " countries " , " income " , r" upper middle " i ) ... julia > search_wdi ( " countries " , " region " , r" Latin America " i ) ... search_wdi ( " countries " , " capital " , r" ^Ka " i ) 3 × 9 DataFrames . DataFrame │ Row │ iso3c │ iso2c │ name │ region │ capital │ longitude │ latitude │ income │ lending │ │ │ String │ String │ String │ String │ String │ Float64⍰ │ Float64⍰ │ String │ String │ ├─────┼────────┼────────┼─────────────┼─────────────────────┼───────────┼───────────┼──────────┼────────────┼─────────┤ │ 1 │ AFG │ AF │ Afghanistan │ South Asia │ Kabul │ 69.1761 │ 34.5228 │ Low income │ IDA │ │ 2 │ NPL │ NP │ Nepal │ South Asia │ Kathmandu │ 85.3157 │ 27.6939 │ Low income │ IDA │ │ 3 │ UGA │ UG │ Uganda │ Sub - Saharan Africa │ Kampala │ 32.5729 │ 0.314269 │ Low income │ IDA │ julia > search_wdi ( " countries " , " lending " , r" IBRD " i ) ... Examples of indicator searches julia > search_wdi ( " indicators " , " name " , r" gross national expenditure " i ) ... julia > search_wdi ( " indicators " , " description " , r" gross national expenditure " i ) ... julia > search_wdi ( " indicators " , " source_database " , r" Sustainable " i ) ... julia > search_wdi ( " indicators " , " source_organization " , r" Global Partnership " i ) Tips and Tricks Extracting country data from results df = wdi ( " NY.GNP.PCAP.CD " , [ " US " , " BR " ], 1980 , 2012 , extra = true ) us_gnp = df[df[ ! , :iso2c ] .== " US " , :] Year format For similarity with the R WDI package the :year column is in Float64 format. WDI data is yearly. You can easily convert this to a Date series: using WorldBankData using Dates df = wdi ( " AG.LND.ARBL.HA.PC " , " US " , 1900 , 2011 ) df[ ! , :year ] = map (Date, df[ ! , :year ]) Plotting Install the StatsPlots.jl package with Pkg.add("StatsPlots") . using WorldBankData using StatsPlots gr (size = ( 400 , 300 )) df = wdi ( " AG.LND.ARBL.HA.PC " , " US " , 1980 , 2010 ) @df df scatter ( :year , :AG_LND_ARBL_HA_PC ) Empty/Missing results wdi will return a DataFrame with missing values if there is no data: julia > df = wdi ( " EN.ATM.CO2E.KT " , " AS " ) 60 × 4 DataFrames . DataFrame │ Row │ iso2c │ country │ EN_ATM_CO2E_KT │ year │ │ │ String │ String │ Missing │ Float64 │ ├─────┼────────┼────────────────┼────────────────┼─────────┤ │ 1 │ AS │ American Samoa │ missing │ 1960.0 │ │ 2 │ AS │ American Samoa │ missing │ 1961.0 │ │ 3 │ AS │ American Samoa │ missing │ 1962.0 │ ... julia > df = wdi ( " EN.ATM.CO2E.KT " , [ " AS " , " US " ]) 120 × 4 DataFrames . DataFrame │ Row │ iso2c │ country │ EN_ATM_CO2E_KT │ year │ │ │ String │ String │ Float64⍰ │ Float64 │ ├─────┼────────┼────────────────┼────────────────┼─────────┤ │ 1 │ AS │ American Samoa │ missing │ 1960.0 │ │ 2 │ AS │ American Samoa │ missing │ 1961.0 │ ... │ 114 │ US │ United States │ 5.15916e6 │ 2013.0 │ │ 115 │ US │ United States │ 5.25428e6 │ 2014.0 │ │ 116 │ US │ United States │ missing │ 2015.0 │ │ 120 │ US │ United States │ missing │ 2019.0 │ ... Cache The data in the World Bank database changes infrequently. Therefore it makes little sense to download it every time a script is run. Metadata The search_wdi() function internally caches the country and indicator metadata and therefore downloads the country and indicator data only once per session. Even that is usually not necessary. This data can easily be stored on local disk. Download and store the country and indicator information in csv files: using WorldBankData using DataFrames using CSV CSV . write ( " country_cache.csv " ,WorldBankData . get_countries ()) CSV . write ( " indicator_cache.csv " , WorldBankData . get_indicators ()) These can be used in the script to set the WorldBankData cache variables WorldBankData.country_cache and WorldBankData.indicator_cache (which are initialized to false ) using the WorldBankData.set_country_cache() and WorldBankData.set_indicator_cache() functions: using WorldBankData using DataFrames WorldBankData . set_country_cache (CSV . read ( " country_cache.csv " )) WorldBankData . set_indicator_cache (CSV . read ( " indicator_cache.csv " )) From then on the search_wdi() function will use the data read from disk. The caches can be reset with WorldBankData.reset_country_cache() and WorldBankData.reset_indicator_cache() . Indicator data In a similar way the indicator data itself can be cached. using WorldBankData using DataFrames using CSV function update_us_gnp_per_cap () df = wdi ( " NY.GNP.PCAP.CD " , " US " ) CSV . write ( " us_gnp.csv " ,df) end df = CSV . read ( " us_gnp.csv " ) one then runs the update_us_gnp_per_cap() function only when needed.