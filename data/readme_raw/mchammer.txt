MC HAMMER Monte Carlo Simulation and Business Analysis tools for Julia Documentation Build Status Project Mission We want to give access to models to those who need it because for too long insight has inadvertently been hidden away on some analysts computers. This project has the objective to give business analysts tools to either develop or migrate advanced models quickly into Julia so they can be used embedded into systems and workflows that support entire teams and organizations. More people who have access to insights generated by a model, the better the decision making will be over time. Overview The MC in MC Hammer stands for Monte-Carlo. This tool is inspired by seminal tools such as Oracle Crystal Ball and Palisade @RISK for their ability to quickly build and analyze Monte-Carlo simulation models using excel functions and automations. MC Hammer replicates their logic, functions and elemental tools in Julia, thus significantly reducing the time, complexity and effort to perform advanced modeling and simulation. Current Features Modeling Features Correlation of Simulated Inputs (Iman-Conover[1982]) Covariance Matrix Rank Order Correlation Matrix Pearson Product Moment Correlation Matrix Density & Histogram Charts with Descriptive Stats Sensitivity Analysis Chart Rank Correlation PPMC Contribution to Variance % Time Series Features Time Series using Simulated Random Walk Time Series using Historical Data to calculate parameters for Simulated Random Walk Trend Charts with Customizable Confidence Bands Import / Exporting (New) Import SIPmath 2.0 Libraries Export simulation results to the SIPmath 2.0 standard. Current Functions cormat() covmat() corvar() GetCertainty() fractiles() cmd() truncate_digit() density_chrt() histogram_chrt() sensitivity_chrt() trend_chrt() GBMMult_Fit() GBMM() genmeta() sip2csv() importsip() importxlsip() Documentation STABLE — most recently tagged version of the documentation. DEVEL — in-development version of the documentation. Development Roadmap Functions : MetaLog Distributions Chart: Changes to output means Sensitivity Chart Function: Combined Expert Opinion Time Series: Learning Curve Forecasts Function: Ogive through empirical resampling Chart: ADD S-Curve (in Markowitz example) Chart: Error Bar Example (base code in mch_charts) Chart: Add Overlay Become an MCHammer contributor If you are interested about learning or sharing extensive experience on how to build and automate simulation using Julia, then the MCHammer team NEEDS YOU!