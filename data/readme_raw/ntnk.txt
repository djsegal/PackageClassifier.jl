NTNk.jl Nonnegative Tensor Networks: Hierarchical Tucker Tensor Train NTNk provides high-performance computing capabilities to solve problems with Shared and Distributed Arrays in parallel. The parallelization allows for utilization of multi-core / multi-processor environments. GPU and TPU accelerations are also available through existing Julia packages. Installation After starting Julia, execute: import Pkg; Pkg . add ( " NTNk " ) o access the latest released version. To utilize the latest updates (commits) use: import Pkg; Pkg . add (Pkg . PackageSpec (name = " NTNk " , rev = " master " )) Docker docker run --interactive --tty montyvesselinov/tensors Tensor Decomposition NTFk performs a novel unsupervised Machine Learning (ML) method based on Tensor Decomposition coupled with sparsity and nonnegativity constraints. NTFk has been applied to extract the temporal and spatial footprints of the features in multi-dimensional datasets in the form of multi-way arrays or tensors. NTFk executes the decomposition (factorization) of a given tensor by minimization of the Frobenius norm: where: is the dimensionality of the tensor is a "mixing" core tensor are "feature‚Äù factors (in the form of vectors or matrices) is a tensor product applied to fold-in factors in each of the tensor dimensions The product is an estimate of ( ). The reconstruction error is expected to be random uncorrelated noise. is a -dimensional tensor with a size and a rank lower than the size and the rank of . The size of tensor defines the number of extracted features (signals) in each of the tensor dimensions. The factor matrices represent the extracted features (signals) in each of the tensor dimensions. The number of matrix columns equals the number of features in the respective tensor dimensions (if there is only 1 column, the particular factor is a vector). The number of matrix rows in each factor (matrix) equals the size of tensor X in the respective dimensions. The elements of tensor define how the features along each dimension ( ) are mixed to represent the original tensor . NTFk can perform Tensor Decomposition using Candecomp/Parafac (CP) or Tucker decomposition models. Some of the decomposition models can theoretically lead to unique solutions under specific, albeit rarely satisfied, noiseless conditions. When these conditions are not satisfied, additional minimization constraints can assist the factorization. A popular approach is to add sparsity and nonnegative constraints. Sparsity constraints on the elements of G reduce the number of features and their mixing (by having as many zero entries as possible). Nonnegativity enforces parts-based representation of the original data which also allows the Tensor Decomposition results for and to be easily interrelated Cichocki et al, 2009 . Publications: Vesselinov, V.V., Mudunuru, M., Karra, S., O'Malley, D., Alexandrov, B.S., Unsupervised Machine Learning Based on Non-Negative Tensor Factorization for Analyzing Reactive-Mixing, Journal of Computational Physics, 2018 (in review). PDF Vesselinov, V.V., Alexandrov, B.S., O'Malley, D., Nonnegative Tensor Factorization for Contaminant Source Identification, Journal of Contaminant Hydrology, 10.1016/j.jconhyd.2018.11.010, 2018. PDF Research papers are also available at Google Scholar , ResearchGate and Academia.edu Presentations: Vesselinov, V.V., Novel Machine Learning Methods for Extraction of Features Characterizing Datasets and Models, AGU Fall meeting, Washington D.C., 2018. PDF Vesselinov, V.V., Novel Machine Learning Methods for Extraction of Features Characterizing Complex Datasets and Models, Recent Advances in Machine Learning and Computational Methods for Geoscience, Institute for Mathematics and its Applications, University of Minnesota, 2018. PDF Presentations are also available at slideshare.net , ResearchGate and Academia.edu Videos: Vesselinov, V.V., Novel Machine Learning Methods for Extraction of Features Characterizing Complex Datasets and Models, Recent Advances in Machine Learning and Computational Methods for Geoscience, Institute for Mathematics and its Applications, University of Minnesota, 2018. Videos are also available on YouTube For more information, visit monty.gitlab.io Installation behind a firewall Julia uses git for package management. Add in the .gitconfig file in your home directory: [url "git@github.com:"] insteadOf = https://github.com/ [url "git@gitlab.com:"] insteadOf = https://gitlab.com/ [url "https://"] insteadOf = git:// [url "http://"] insteadOf = git:// or execute: git config --global url."https://".insteadOf git:// git config --global url."http://".insteadOf git:// git config --global url."git@gitlab.com:".insteadOf https://gitlab.com/ git config --global url."git@github.com:".insteadOf https://github.com/ Set proxies: export ftp_proxy=http://proxyout.<your_site>:8080 export rsync_proxy=http://proxyout.<your_site>:8080 export http_proxy=http://proxyout.<your_site>:8080 export https_proxy=http://proxyout.<your_site>:8080 export no_proxy=.<your_site> For example, if you are doing this at LANL, you will need to execute the following lines in your bash command-line environment: export ftp_proxy=http://proxyout.lanl.gov:8080 export rsync_proxy=http://proxyout.lanl.gov:8080 export http_proxy=http://proxyout.lanl.gov:8080 export https_proxy=http://proxyout.lanl.gov:8080 export no_proxy=.lanl.gov 