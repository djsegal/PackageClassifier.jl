<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content p-5" itemprop="text"><h1><a id="user-content-bsdiff" class="anchor" aria-hidden="true" href="#bsdiff"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>BSDiff</h1>
<p><a href="https://travis-ci.org/JuliaIO/BSDiff.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1631e06e722b1857ee8711d8c4397354f5ff5ae9/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961494f2f4253446966662e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaIO/BSDiff.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaIO/BSDiff.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f6029ba3fc822abc64dc6f293b6cef5b8b33f29d/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961494f2f4253446966662e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/JuliaIO/BSDiff.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>The BSDiff package is a pure Julia implementation of Matthew
Endsley's <a href="https://github.com/mendsley/bsdiff">version</a> of the <code>bsdiff</code> tool,
based on (but incompatible with) Colin Percival's <a href="http://www.daemonology.net/bsdiff/" rel="nofollow">original program</a>.
It provides two Julia commands with the same API as the command-line tools:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">bsdiff</span>(old, new, [ patch ])
<span class="pl-c1">bspatch</span>(old, [ new, ] patch)</pre></div>
<p>The <code>bsdiff</code> command computes a patch file given <code>old</code> and <code>new</code> files while the
<code>bspatch</code> command applies a patch file to an <code>old</code> file to produce a <code>new</code> file.</p>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API</h2>
<p>The public API for the <code>BSDiff</code> package consists of the following functions:</p>

<h3><a id="user-content-bsdiff-1" class="anchor" aria-hidden="true" href="#bsdiff-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>bsdiff</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">bsdiff</span>(old, new, [ patch ]) <span class="pl-k">-&gt;</span> patch</pre></div>
<p>Compute a binary patch that will transform the file <code>old</code> into the file <code>new</code>.
All arguments are strings. If no path is passed for <code>patch</code> the patch data is
written to a temporary file whose path is returned.</p>
<p>The <code>old</code> argument can also be a tuple of two strings, in which case the first
is used as the path to the old data and the second is used as the path to a file
containing the sorted suffix array for the old data. Since sorting the suffix
array is the slowest part of generating a diff, pre-computing this and reusing
it can significantly speed up generting diffs from the same old file to multiple
different new files.</p>
<h3><a id="user-content-bspatch" class="anchor" aria-hidden="true" href="#bspatch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>bspatch</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">bspatch</span>(old, [ new, ] patch) <span class="pl-k">-&gt;</span> new</pre></div>
<p>Apply a binary patch in file <code>patch</code> to the file <code>old</code> producing file <code>new</code>.
All arguments are strings. If no path is passed for <code>new</code> the new data is
written to a temporary file whose path is returned.</p>
<p>Note that the optional argument is the middle argument, which is a bit unusual
in a Julia API, but which allows the argument order when passing all three paths
to be the same as the <code>bspatch</code> command.</p>
<h3><a id="user-content-bsindex" class="anchor" aria-hidden="true" href="#bsindex"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>bsindex</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">bsindex</span>(old, [ index ]) <span class="pl-k">-&gt;</span> index</pre></div>
<p>Save index data (currently a sorted suffix array) for the file <code>old</code> into the
file <code>index</code>. All arguments are strings. If no <code>index</code> argument is given, the
index data is saved to a temporary file whose path is returned. The path of the
index file can be passed to <code>bsdiff</code> to speed up the diff computation by passing
<code>(old, index)</code> as the first argument instead of just <code>old</code>.</p>

<h2><a id="user-content-compatiblity" class="anchor" aria-hidden="true" href="#compatiblity"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Compatiblity</h2>
<p>This package produces and consumes patches that are compatible with Matthew
Endsley's version of the <code>bsdiff</code> tool, which uses a different format from
Colin Percival's original <code>bsdiff</code> tool. Patch files for this version of
<code>bsdiff</code> start with the magic string <code>ENDSLEY/BSDIFF43</code>. It may, in the future,
be possible to add support for other <code>bsdiff</code> formats if someone needs it. Even
though the format is Endsley-compatible, patch files produced by this package
will not be identical to the Endsley <code>bsdiff</code> program for two reasons:</p>
<ol>
<li>
<p>The bzip2 compression used by package and by the commands may have different
settings and produce different results—in general compression libraries like
bzip2 don't guarantee perfect reproducibility.</p>
</li>
<li>
<p>The uncompressed patch produced by this package is sometimes better than the
one produced by the command line tool due to a bug in the way the command uses
<code>memcmp</code> to do string comparison. See <a href="https://github.com/JuliaIO/BSDiff.jl/pull/8">this pull
request</a> for details.</p>
</li>
</ol>
<p>The exact output produced by this library will not necessarily remain identical
in the future—there are many valid patches for the same <code>old</code> and <code>new</code> data.
Improvements to the speed and quality of the patch generation algorithm may lead
to different outputs in the future. However, the patch format is simple and
stable: it is guaranteed that newer versions of the package will be able to
apply patches produced by older versions and vice versa.</p>
</article></div>