<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content p-5" itemprop="text"><h1><a id="user-content-miniqhull" class="anchor" aria-hidden="true" href="#miniqhull"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MiniQhull</h1>
<p><a href="https://travis-ci.com/gridap/MiniQhull.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a5c013252724830a5a115889a18153bd218b686e/68747470733a2f2f7472617669732d63692e636f6d2f6772696461702f4d696e695168756c6c2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/gridap/MiniQhull.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/gridap/MiniQhull.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/993fb8ac05a050dd259c93f0f9f44174dc854dba/68747470733a2f2f636f6465636f762e696f2f67682f6772696461702f4d696e695168756c6c2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/gridap/MiniQhull.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><a href="https://github.com/gridap/MiniQhull.jl">MiniQhull</a> (<a href="http://www.qhull.org/" rel="nofollow">Qhull</a>-based Delaunay triangulation).</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h2>
<p><code>MiniQhull</code> julia package provides a single function: <code>delaunay</code>.</p>
<p>There are two available interfaces for <code>MiniQhull.delaunay</code> functions:</p>
<h3><a id="user-content-coordinates-vector" class="anchor" aria-hidden="true" href="#coordinates-vector"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Coordinates vector</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">delaunay</span>(dim<span class="pl-k">::</span><span class="pl-c1">Integer</span>, numpoints<span class="pl-k">::</span><span class="pl-c1">Integer</span>, points<span class="pl-k">::</span><span class="pl-c1">Vector</span>) <span class="pl-k">-&gt;</span> Matrix{Int32}</pre></div>
<p>vector length must agree with <code>dim*numpoints</code> and points must be in "component major order", i.e., components are consequitive within the vector. The resulting matrix has shape <code>(dim+1,nsimplices)</code>, where <code>nsimplices</code> is the number of
simplices in the computed delaunay triangulation.</p>
<h3><a id="user-content-coordinates-matrix" class="anchor" aria-hidden="true" href="#coordinates-matrix"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Coordinates matrix</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">delaunay</span>(points<span class="pl-k">::</span><span class="pl-c1">Matrix</span>) <span class="pl-k">-&gt;</span> Matrix{Int32}</pre></div>
<p>with <code>size(matrix) == (dim,numpoints)</code>.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> MiniQhull
dim          <span class="pl-k">=</span> <span class="pl-c1">2</span>
numpoints    <span class="pl-k">=</span> <span class="pl-c1">4</span>
coordinates  <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>]
connectivity <span class="pl-k">=</span> <span class="pl-c1">delaunay</span>(dim, numpoints, coordinates)
<span class="pl-c"><span class="pl-c">#</span> output</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">2</span> Array{Int32,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span></pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> MiniQhull
coordinates  <span class="pl-k">=</span> [<span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1</span> <span class="pl-c1">1</span>; <span class="pl-c1">0</span> <span class="pl-c1">1</span> <span class="pl-c1">0</span> <span class="pl-c1">1</span>]
connectivity <span class="pl-k">=</span> <span class="pl-c1">delaunay</span>(coordinates)
<span class="pl-c"><span class="pl-c">#</span> output</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">2</span> Array{Int32,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span></pre></div>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p><strong>MiniQhull</strong> itself is installed when you add and use it into another project.</p>
<p>Please, ensure that your system fulfill the requirements.</p>
<p>To include into your project form Julia REPL, use the following commands:</p>
<pre><code>pkg&gt; add MiniQhull
julia&gt; using MiniQhull
</code></pre>
<p>If, for any reason, you need to manually build the project (e.g., you added the project with the wrong environment resulting a build that fails, you have fixed the environment and want to re-build the project), write down the following commands in Julia REPL:</p>
<pre><code>pkg&gt; add MiniQhull
pkg&gt; build MiniQhull
julia&gt; using MiniQhull
</code></pre>
<h3><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Requirements</h3>
<p><code>MiniQhull</code> julia package requires <a href="http://www.qhull.org/" rel="nofollow">Qhull</a> reentrant library installed in a system path. Reentrant <code>Qhull</code> library can be installed in any path on your local machine. In order to succesfull describe your custom installation to be located by <code>MiniQhull</code>, you must export <code>QHULL_ROOT_DIR</code> environment variable. If this environment variables are not available, <code>MiniQhull</code> will try to find the library in the usual linux user library directory (<code>/usr/lib</code>).</p>
<p><code>MiniQhull</code> also requires any C compiler installed on the system.</p>
<h4><a id="user-content-qhull-installation" class="anchor" aria-hidden="true" href="#qhull-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Qhull installation</h4>
<h5><a id="user-content-from-sources" class="anchor" aria-hidden="true" href="#from-sources"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>From Sources</h5>
<p>Custom installation of <code>Qhull</code> can be performed as described in the official <a href="http://www.qhull.org/README.txt" rel="nofollow">Qhull installation instructions</a>.
You can find the latest source code in the oficial <a href="http://www.qhull.org/download/" rel="nofollow">Qhull download section</a>.</p>
<h5><a id="user-content-debian-based-installation-from-package-manager" class="anchor" aria-hidden="true" href="#debian-based-installation-from-package-manager"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Debian-based installation from package manager</h5>
<p>Reentrant <code>Qhull</code> can be obtained from the default repositories of your Debian-based OS by means of <code>apt</code> tool.</p>
<p>Basic reentrant <code>Qhull</code> installation in order to use it from <code>MiniQhull</code> julia package is as follows:</p>
<pre><code>$ sudo apt-get install update
$ sudo apt-get install libqhull-r7 libqhull-dev
</code></pre>
<p>If you need to install a C compiler, it can be also obtained by means of <code>apt</code> tool:</p>
<pre><code>$ sudo apt-get update
$ sudo apt-get gcc
</code></pre>
<h2><a id="user-content-continuous-integration" class="anchor" aria-hidden="true" href="#continuous-integration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Continuous integration</h2>
<p>In order to take advantage of <code>MiniQhull</code> julia package during continuous integration, you must ensure that the requirements are fullfilled in the CI environment.</p>
<p>If your CI process is based on <code>Travis-CI</code> you can add the following block at the beginning of your <code>.travis.yml</code> file:</p>
<pre><code>addons:
  apt:
    update: true
    packages:
    - gcc
    - libqhull-r7
    - libqhull-dev
</code></pre>
</article></div>