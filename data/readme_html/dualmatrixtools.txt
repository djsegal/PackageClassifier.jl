<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content p-5" itemprop="text"><p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4486578/59233116-77ec4a00-8c2a-11e9-87f3-012137752347.png"><img src="https://user-images.githubusercontent.com/4486578/59233116-77ec4a00-8c2a-11e9-87f3-012137752347.png" title="Solving a dual-valued linear system" align="center" width="100%" style="max-width:100%;"></a></p>
<h1><a id="user-content-dualmatrixtoolsjl" class="anchor" aria-hidden="true" href="#dualmatrixtoolsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DualMatrixTools.jl</h1>
<p>
  <a href="https://doi.org/10.5281/zenodo.1493571" rel="nofollow">
    <img src="https://camo.githubusercontent.com/22a7188abfb90dfb1cd9343b8d4cd72e8a9f019a/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e313439333537312e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.1493571.svg" style="max-width:100%;">
  </a>
  <a href="https://briochemc.github.io/DualMatrixTools.jl/stable" rel="nofollow">
    <img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;">
  </a>
  <a href="https://travis-ci.com/briochemc/DualMatrixTools.jl" rel="nofollow">
    <img alt="Build Status" src="https://camo.githubusercontent.com/b7fccfc75d5480e676537c54552fd251620ffdfe/68747470733a2f2f7472617669732d63692e636f6d2f6272696f6368656d632f4475616c4d6174726978546f6f6c732e6a6c2e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.com/briochemc/DualMatrixTools.jl.svg?branch=master" style="max-width:100%;">
  </a>
  <a href="https://travis-ci.org/briochemc/DualMatrixTools.jl" rel="nofollow">
    <img alt="Build Status" src="https://camo.githubusercontent.com/7a180eccf96ef41852c3fc299afc92ac876f6852/68747470733a2f2f7472617669732d63692e6f72672f6272696f6368656d632f4475616c4d6174726978546f6f6c732e6a6c2e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.org/briochemc/DualMatrixTools.jl.svg?branch=master" style="max-width:100%;">
  </a>
  <a href="https://coveralls.io/github/briochemc/DualMatrixTools.jl?branch=master" rel="nofollow">
    <img src="https://camo.githubusercontent.com/bed627613403387e3de31cef4c84d51791d28276/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6272696f6368656d632f4475616c4d6174726978546f6f6c732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/briochemc/DualMatrixTools.jl/badge.svg?branch=master" style="max-width:100%;">    
  </a>
  <a href="https://codecov.io/gh/briochemc/DualMatrixTools.jl" rel="nofollow">
    <img src="https://camo.githubusercontent.com/86d9e2d3356da93cc2355ae3d5b5405786a6b0a5/68747470733a2f2f636f6465636f762e696f2f67682f6272696f6368656d632f4475616c4d6174726978546f6f6c732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" data-canonical-src="https://codecov.io/gh/briochemc/DualMatrixTools.jl/branch/master/graph/badge.svg" style="max-width:100%;">
  </a>
  <a href="https://github.com/briochemc/DualMatrixTools.jl/blob/master/LICENSE">
    <img alt="License: MIT" src="https://camo.githubusercontent.com/3ccf4c50a1576b0dd30b286717451fa56b783512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width:100%;">
  </a>
</p>
<p>This package provides an overloaded <code>factorize</code> and <code>\</code> that work with dual-valued arrays.</p>
<p>It uses the dual type defined by the <a href="https://github.com/JuliaDiff/DualNumbers.jl">DualNumbers.jl</a> package.
The idea is that for a dual-valued matrix</p>
<p><a href="https://www.codecogs.com/eqnedit.php?latex=\fn_phv&amp;space;M&amp;space;=&amp;space;A&amp;space;+&amp;space;\varepsilon&amp;space;B" rel="nofollow"><img src="https://camo.githubusercontent.com/d9856fcd341b9ecb2301971450de02547039ed8e/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c666e5f7068762673706163653b4d2673706163653b3d2673706163653b412673706163653b2b2673706163653b5c766172657073696c6f6e2673706163653b42" title="M = A + \varepsilon B" data-canonical-src="https://latex.codecogs.com/gif.latex?\fn_phv&amp;space;M&amp;space;=&amp;space;A&amp;space;+&amp;space;\varepsilon&amp;space;B" style="max-width:100%;"></a>,</p>
<p>its inverse is given by</p>
<p><a href="https://www.codecogs.com/eqnedit.php?latex=\fn_phv&amp;space;M^{-1}&amp;space;=&amp;space;(I&amp;space;-&amp;space;\varepsilon&amp;space;A^{-1}&amp;space;B)&amp;space;A^{-1}" rel="nofollow"><img src="https://camo.githubusercontent.com/e442670e4f4e7c50761d9ac36ce235cbb48734a1/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c666e5f7068762673706163653b4d5e7b2d317d2673706163653b3d2673706163653b28492673706163653b2d2673706163653b5c766172657073696c6f6e2673706163653b415e7b2d317d2673706163653b42292673706163653b415e7b2d317d" title="M^{-1} = (I - \varepsilon A^{-1} B) A^{-1}" data-canonical-src="https://latex.codecogs.com/gif.latex?\fn_phv&amp;space;M^{-1}&amp;space;=&amp;space;(I&amp;space;-&amp;space;\varepsilon&amp;space;A^{-1}&amp;space;B)&amp;space;A^{-1}" style="max-width:100%;"></a>.</p>
<p>Therefore, only the inverse of <a href="https://www.codecogs.com/eqnedit.php?latex=\fn_phv&amp;space;A" rel="nofollow"><img src="https://camo.githubusercontent.com/5ecf11a7e1da89bb046c540a9f33c41fb7e10a74/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c666e5f7068762673706163653b41" title="A" data-canonical-src="https://latex.codecogs.com/gif.latex?\fn_phv&amp;space;A" style="max-width:100%;"></a> is required to evaluate the inverse of <a href="https://www.codecogs.com/eqnedit.php?latex=\fn_phv&amp;space;M" rel="nofollow"><img src="https://camo.githubusercontent.com/e467b3a043edadf094b0bb2d014ad6b287f5b618/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c666e5f7068762673706163653b4d" title="M" data-canonical-src="https://latex.codecogs.com/gif.latex?\fn_phv&amp;space;M" style="max-width:100%;"></a>.
This package makes available a <code>DualFactors</code> type which containts (i) the factors of <a href="https://www.codecogs.com/eqnedit.php?latex=\fn_phv&amp;space;A" rel="nofollow"><img src="https://camo.githubusercontent.com/5ecf11a7e1da89bb046c540a9f33c41fb7e10a74/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c666e5f7068762673706163653b41" title="A" data-canonical-src="https://latex.codecogs.com/gif.latex?\fn_phv&amp;space;A" style="max-width:100%;"></a> and (ii) the non-real part, <a href="https://www.codecogs.com/eqnedit.php?latex=\fn_phv&amp;space;B" rel="nofollow"><img src="https://camo.githubusercontent.com/9461d89f558d09810d2285d4b9c370e13b7792e3/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c666e5f7068762673706163653b42" title="B" data-canonical-src="https://latex.codecogs.com/gif.latex?\fn_phv&amp;space;B" style="max-width:100%;"></a>.
It also overloads <code>factorize</code> to create an instance of <code>DualFactors</code> (when invoked with a dual-valued matrix), which can then be called with <code>\</code> to efficiently solve dual-valued linear systems of the type <a href="https://www.codecogs.com/eqnedit.php?latex=\fn_phv&amp;space;M&amp;space;x&amp;space;=&amp;space;b" rel="nofollow"><img src="https://camo.githubusercontent.com/fcaa467f5b011d380d0d53ab3a08e69ad789c1ba/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c666e5f7068762673706163653b4d2673706163653b782673706163653b3d2673706163653b62" title="M x = b" data-canonical-src="https://latex.codecogs.com/gif.latex?\fn_phv&amp;space;M&amp;space;x&amp;space;=&amp;space;b" style="max-width:100%;"></a>.</p>
<p>This package should be useful for autodifferentiation of functions that use <code>\</code>.
Note the same idea extends to hyper dual numbers (see the <a href="https://github.com/briochemc/HyperDualMatrixTools.jl">HyperDualMatrixTools.jl</a> package).</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<ol>
<li>
<p>Create your dual-valued matrix <code>M</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> M <span class="pl-k">=</span> A <span class="pl-k">+</span> Îµ <span class="pl-k">*</span> B</pre></div>
</li>
<li>
<p>Apply <code>\</code> to solve systems of the type <code>M * x = b</code></p>
<ul>
<li>
<p>without factorization:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> M <span class="pl-k">\</span> b</pre></div>
</li>
<li>
<p>or better, with prior factorization:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Mf <span class="pl-k">=</span> <span class="pl-c1">factorize</span>(M)

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> Mf <span class="pl-k">\</span> b</pre></div>
<p>(This is better in case you want to solve for another <code>b</code>!)</p>
</li>
</ul>
</li>
</ol>
<h2><a id="user-content-advanced-usage" class="anchor" aria-hidden="true" href="#advanced-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Advanced usage</h2>
<p>In the context of iterative processes with multiple factorizations and forward and back substitutions, you may want to propagate dual-valued numbers while leveraging (potentially) the fact the real part of the matrices to be factorized remains the same throughout.
This package provides an in-place <code>factorize</code>, with a flag to update (or not) the factors.
Usage is straightforward.
By default, <code>factorize</code> does <em>not</em> update the factors</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">factorize</span>(Mf, M) <span class="pl-c"><span class="pl-c">#</span> only Mf.B is updated</span></pre></div>
<p>If you want to update the real-valued factors too, use</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">factorize</span>(Mf, M, update_factors<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> Mf.B and Mf.Af are updated</span></pre></div>
<h2><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Citation</h2>
<p>If you use this package, please cite it!
You can either directly use the bibtex entry, <a href="CITATION.bib">CITATION.bib</a>, or go to the <a href="https://doi.org/10.5281/zenodo.1493571" rel="nofollow">Zenodo record of the package</a> and export the citation from there (the "Export" box at the bottom of that page).</p>
</article></div>